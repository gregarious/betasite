Roadmap:

- URL restructuring
    - Tastypie integration?

- Specific app changes
    - Places:
        - Fix hours custom field. create parking one. surround custom field stuff with unit tests
        - Look into simpler Google place resolving/normalization. Remove any that's unnecessary. Which is pretty much all of it.
        - Either use Tastypie for serialization, or write custom to_json methods ON THE MODELS THEMSELVES
        - Add geopy support perhaps?
        - remove tags, any obsolete fields
    - Events:
        - Refactor so that place primitive is primary. linked Place is a bonus
        - viewmodels._process_dates needs some unit tests
        - Check on JS date display
        - remove tags, any obsolete fields
    - Specials:
        - make dexpires required and give it a default value on save of a year from now if not specified
        - remove tags, any obsolete fields
    - Chatter:
        - Kill it?
    - News:
        - remove tags, any obsolete fields
        - integrate the new FeedView into the feed
    - Now:
        - Rename misleading "page_now" template/view
        - Remove the old now page logic?

    - Nuke migrations. Too many wonky things in there.

- Create some more fabric scripts
    - supervisor control during deploy
    - ability to pull down current production DB and media

- Look into rspec/cucumber as inspiration for tests

- Client-side technologies work

    - Static file handling:
        - General research
        - Pipeline: keep around? Look into what's the current standard. django-compressor maybe?

    - JS:
        - useractions.js: obsolete?
        - review JS structure

    - Tastypie:
        - Consider replacing viewmodels' serialize methods with Tastypie. Might not be worth it? (e.g. events/viewmodels.py:75)

- Package updating (Django, Elasticsearch source, others). Create new requirements file and update on deployed.

- Go back to looking into nginx, Gunicorn. Confusing to figure out. Maybe try getting a local server running with this setup, then after understanding it a bit better, seeing if getting it working with Webfaction makes any sense.

=================

- Feedback?

- Org Admin:
    - Look over how flow works then make better notes on what to take care of

- SSL issues resolved

- Google geocoding
    - Big time simplification needed

- Facebook pulling:
    - Majorly simplify code.
    - Don't allow any critical errors to be thrown.
    - Consider turning some of the batch-hiding operations into generators
    - remove place resolving for any case more complex than id-based linking

- iCal
    - Revisit ical.py
    - Discuss specs with Brett
